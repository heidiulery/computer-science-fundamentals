1. What are some pros and cons of using linked lists instead of arrays?

Pro: Every node is dynamically instantiated in a linked list so there are no empty placeholders.  Each node is independent in memory which allows the OS to use any available memory location to store it.

Con: It can be inefficient to access an element within the list.  Linked lists do not have indices that can immediately locate elements within the list.   

2. Come up with a real world example of a linked list.

A scavenger hunt.  Each clue has a pointer so you can find the next clue.  You cannot find something in the middle or end without following the clues from the beginning.



1. The linked list push function should take a value, create a node, and add it to the end of a list. Below is pseudocode for a push function for a singly linked list. However, there is something wrong with it. Submit both an explanation of the bug and a functional implementation of the method.



2. Given an unsorted singly linked list, remove all duplicates from the linked list.
Example
Input: a -> c -> d -> d -> a
Output: a -> c -> d



3. Given an unsorted singly linked list, reverse it.
Example
Input: a -> b -> c -> d
Output: d -> c -> b -> a
